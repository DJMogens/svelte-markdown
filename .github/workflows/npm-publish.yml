name: Publish to GitHub Packages

on:
    pull_request:
        types: [closed]
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  persist-credentials: false
                  token: ${{ secrets.ACTIONS_KEY }}

            - name: Use Node.js - 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Install
              run: npm ci

            - name: Test
              run: npm test

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

    publish-github-packages:
        needs: build
        if: |
            (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
            (github.event_name == 'push' && github.ref == 'refs/heads/main')
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Use Node.js - 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: 'https://registry.npmjs.org'
                  scope: '@humanspeak'

            - name: Install
              run: npm ci

            - name: Determine version bump type
              id: version-type
              env:
                  HAS_MAJOR: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
                  HAS_MINOR: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
              run: |
                  if [ "$HAS_MAJOR" = "true" ]; then
                    BUMP_TYPE="major"
                  elif [ "$HAS_MINOR" = "true" ]; then
                    BUMP_TYPE="minor"
                  else
                    BUMP_TYPE="patch"
                  fi

                  # Validate that bump type is one of the allowed values
                  case "$BUMP_TYPE" in
                    "major"|"minor"|"patch")
                      echo "bump=$BUMP_TYPE" >> $GITHUB_OUTPUT
                      ;;
                    *)
                      echo "Invalid version bump type"
                      exit 1
                      ;;
                  esac

            - name: Bump version
              id: version
              env:
                  PR_TITLE: ${{ github.event.pull_request.title }}
                  PR_URL: ${{ github.event.pull_request.html_url }}
                  BUMP_TYPE: ${{ steps.version-type.outputs.bump }}
              run: |
                  # Configure git user
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

                  # Validate bump type again for extra security
                  case "$BUMP_TYPE" in
                    "major"|"minor"|"patch") ;;
                    *)
                      echo "Invalid version bump type"
                      exit 1
                      ;;
                  esac

                  # Get the new version number
                  NEW_VERSION=$(npm version "$BUMP_TYPE" --no-git-tag-version)
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

                  # Escape special characters in PR title
                  ESCAPED_TITLE=$(echo "$PR_TITLE" | sed 's/[`$"\]/\\&/g')
                  ESCAPED_URL=$(echo "$PR_URL" | sed 's/[`$"\]/\\&/g')

                  # Commit the version changes
                  git add package.json package-lock.json
                  git commit -m "Bump version to ${NEW_VERSION} [skip ci]"

                  # Create an annotated tag with release notes
                  git tag -a "${NEW_VERSION}" -m "Release ${NEW_VERSION}

                  Changes in this Release:
                  - ${ESCAPED_TITLE}

                  PR: ${ESCAPED_URL}"

                  # Push both the commit and the tag
                  git push
                  git push --tags

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.version.outputs.new_version }}
                  name: Release ${{ steps.version.outputs.new_version }}
                  body: |
                      Changes in this Release
                      - ${{ github.event.pull_request.title }}

                      For more details, see the [Pull Request](${{ github.event.pull_request.html_url }})
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_TOKEN }}

            - name: Notify on failure
              if: failure()
              uses: actions/github-script@v7
              with:
                  script: |
                      github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: '‚ùå Release workflow failed. Please check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
                      })
